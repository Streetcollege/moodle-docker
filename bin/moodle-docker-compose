#!/usr/bin/env bash
set -e

# Nasty portable way to the directory of this script, following symlink,
# because readlink -f not on OSX. Thanks stack overflow..
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
basedir="$( cd -P "$( dirname "$SOURCE" )/../" && pwd )"
export ASSETDIR="${basedir}/assets"

if [ -f "${basedir}/.env" ];
then
  . "${basedir}/.env"
fi

if [ ! -d "$MOODLE_DOCKER_WWWROOT" ];
then
    echo 'Error: $MOODLE_DOCKER_WWWROOT is not set or not an existing directory'
    exit 1
fi

if [ ! -n "$MOODLE_DOCKER_DBPASS" ];
then
    echo 'Error: $MOODLE_DOCKER_DBPASS is not set'
    exit 1
fi

if [ ! -n "$MOODLE_DOCKER_WEB_HOST" ];
then
    echo 'Error: $MOODLE_DOCKER_WEB_HOST is not set'
    exit 1
fi

# Set unset variables to empty strings to quieten Docker errors
export MOODLE_DOCKER_SMTP_HOST=${MOODLE_DOCKER_SMTP_HOST:-}
export MOODLE_DOCKER_SMTP_SECURITY=${MOODLE_DOCKER_SMTP_SECURITY:-}
export MOODLE_DOCKER_SMTP_AUTHTYPE=${MOODLE_DOCKER_SMTP_AUTHTYPE:-}
export MOODLE_DOCKER_SMTP_USER=${MOODLE_DOCKER_SMTP_USER:-}
export MOODLE_DOCKER_SMTP_PASS=${MOODLE_DOCKER_SMTP_PASS:-}
export MOODLE_DOCKER_ADMIN_EMAIL=${MOODLE_DOCKER_ADMIN_EMAIL:-}
export MOODLE_DOCKER_SSL=${MOODLE_DOCKER_SSL:-}
export MOODLE_DOCKER_SELENIUM_SUFFIX=${MOODLE_DOCKER_SELENIUM_SUFFIX:-}

# PHP Version.
export MOODLE_DOCKER_PHP_VERSION=${MOODLE_DOCKER_PHP_VERSION:-7.1}

dockercompose="docker-compose -f ${basedir}/base.yml"

# Load mailhog if no SMTP host set
if [ ! -n "$MOODLE_DOCKER_SMTP_HOST" ];
then
    dockercompose="${dockercompose} -f ${basedir}/service.mail.yml"
fi

# load dev_mode settings if DEV_MODE flag is set
if [ "$MOODLE_DOCKER_DEV_MODE" = "true" ];
then
  dockercompose="${dockercompose} -f ${basedir}/dev_mode.yml"
fi

# if xdebug key is set, setup the config variable, otherwise set an empty string
if [ "$MOODLE_DOCKER_XDEBUG_KEY" ]; then
    export XDEBUG_CONFIG="idekey=${MOODLE_DOCKER_XDEBUG_KEY}"
else
    export XDEBUG_CONFIG=""
fi


if [ "$1" = "down" ]; then
  echo "This will destroy your containers! Continue? (type \"yes\")"
  read confirmation
  if [ "$confirmation" != "yes" ]; then
    echo "Operation aborted"
    exit 1
  fi
fi


$dockercompose $@
